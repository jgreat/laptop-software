---
- name: Create ~/.fonts
  file:
    path: "{{ ansible_env.HOME }}/.fonts"
    state: directory
    mode: 0755

- name: Install Nerd Fonts
  get_url:
    url: "{{ item.url }}"
    dest: "{{ ansible_env.HOME }}/.fonts/{{ item.dest }}"
  register: nerd_fonts
  with_items:
    - url: https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraMono/Regular/complete/Fura%20Mono%20Regular%20Nerd%20Font%20Complete%20Mono.otf
      dest: Fura_Mono_Regular_Nerd_Font_Complete_Mono.otf
    - url: https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraMono/Regular/complete/Fura%20Mono%20Regular%20Nerd%20Font%20Complete.otf
      dest: Fura_Mono_Regular_Nerd_Font_Complete.otf

- name: Update Font Cache
  become: yes
  command: fc-cache -fv
  when: nerd_fonts is changed

- name: git obbyrussell/oh-my-zsh
  git:
    repo: https://github.com/robbyrussell/oh-my-zsh.git
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh"
    depth: "1"
    update: no
  register: clone_ohmyzsh

- name: Copy oh-my-zsh zshrc in place
  copy:
    src: "{{ ansible_env.HOME }}/.oh-my-zsh/templates/zshrc.zsh-template"
    dest: "{{ ansible_env.HOME }}/.zshrc"
    remote_src: True
  when: clone_ohmyzsh is changed

- name: Set ZSH variable to ~/.oh-my-zsh
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    regexp: 'export ZSH='
    line: "export ZSH={{ ansible_env.HOME }}/.oh-my-zsh"

- name: git denysdovhan/spaceship
  git:
    repo: https://github.com/denysdovhan/spaceship-prompt.git
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/spaceship-prompt"
    depth: "1"
  register: clone_spaceship

- name: Link spaceship theme
  file:
    state: link
    src: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/spaceship-prompt/spaceship.zsh-theme"
    path: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/spaceship.zsh-theme"

- name: Set spaceship zsh theme
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    regexp: '^ZSH_THEME='
    line: 'ZSH_THEME="spaceship"'

- name: Set vte in .zshrc for tilix
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    create: yes
    marker: "# {mark} tilix ANSIBLE MANAGED BLOCK"
    block: |
      if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
        source /etc/profile.d/vte-2.91.sh
      fi

- name: Set kubectl options in .zshrc
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    create: yes
    marker: "# {mark} kubectl ANSIBLE MANAGED BLOCK"
    block: |
      source <(kubectl completion zsh)
      source <(helm completion zsh)
      export SPACESHIP_KUBECTL_VERSION_SHOW=false
      export SPACESHIP_KUBECTL_SHOW=true


- name: Do bad things with known_hosts
  blockinfile:
    path: "{{ ansible_env.HOME }}/.ssh/config"
    create: yes
    block: |
      host *
        StrictHostKeyChecking no
        UserKnownHostsFile /dev/null

- name: Set aliases in .zshrc
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    create: yes
    marker: "# {mark} aliases ANSIBLE MANAGED BLOCK"
    block: |
      alias tf=terraform
      alias k=kubectl

- name: Create ~/.protected
  file:
    path: "{{ ansible_env.HOME }}/.protected"
    state: directory
    mode: 0700

- name: Create ~/.protected/.env
  file:
    path: "{{ ansible_env.HOME }}/.protected/.env"
    state: touch
    mode: 0600

- name: Set .protected in .zshrc
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    create: yes
    marker: "# {mark} .protected ANSIBLE MANAGED BLOCK"
    block: |
      source ${HOME}/.protected/.env
